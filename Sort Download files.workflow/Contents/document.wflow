<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>520</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<false/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.path</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.1.1</string>
				<key>AMApplication</key>
				<array>
					<string>Finder</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>itemType</key>
					<dict/>
					<key>predicate</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.path</string>
					</array>
				</dict>
				<key>AMRequiredResources</key>
				<array/>
				<key>AMSelectedInputType</key>
				<string>com.apple.cocoa.path</string>
				<key>AMSelectedOutputType</key>
				<string>com.apple.cocoa.path</string>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Filter Finder Items 2.action</string>
				<key>ActionName</key>
				<string>Filter Finder Items</string>
				<key>ActionParameters</key>
				<dict>
					<key>itemType</key>
					<string>com.apple.cocoa.path</string>
					<key>predicate</key>
					<data>
					YnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25Z
					JGFyY2hpdmVyVCR0b3BYJG9iamVjdHMSAAGG
					oF8QD05TS2V5ZWRBcmNoaXZlctEICVRyb290
					gAGvEBYLDBMYICorLjU5Pj9CRkpPUFNZXWFj
					VSRudWxs0w0ODxAREl8QF05TQ29tcG91bmRQ
					cmVkaWNhdGVUeXBlXxAPTlNTdWJwcmVkaWNh
					dGVzViRjbGFzcxACgAKAFdIUDxUXWk5TLm9i
					amVjdHOhFoADgBTUDxkaGxwdHh9fEBFOU1Jp
					Z2h0RXhwcmVzc2lvbl8QEE5TTGVmdEV4cHJl
					c3Npb25fEBNOU1ByZWRpY2F0ZU9wZXJhdG9y
					gBOADoAEgBHVISIjJA8lJicoKVlOU09wZXJh
					bmReTlNTZWxlY3Rvck5hbWVfEBBOU0V4cHJl
					c3Npb25UeXBlW05TQXJndW1lbnRzgAaABRAD
					gAiADVx2YWx1ZUZvcktleTrSIw8sLRABgAfS
					LzAxMlokY2xhc3NuYW1lWCRjbGFzc2VzXxAQ
					TlNTZWxmRXhwcmVzc2lvbqMxMzRcTlNFeHBy
					ZXNzaW9uWE5TT2JqZWN00hQPNjihN4AJgAzT
					DyM6Ozw9WU5TS2V5UGF0aIALEAqAClphbnlD
					b250ZW500i8wQEFfEBxOU0tleVBhdGhTcGVj
					aWZpZXJFeHByZXNzaW9uo0AzNNIvMENEXk5T
					TXV0YWJsZUFycmF5o0NFNFdOU0FycmF50i8w
					R0hfEBNOU0tleVBhdGhFeHByZXNzaW9upEdJ
					MzRfEBROU0Z1bmN0aW9uRXhwcmVzc2lvbtNL
					Iw9MTU5fEA9OU0NvbnN0YW50VmFsdWWADxAA
					gBBQ0i8wUVJfEBlOU0NvbnN0YW50VmFsdWVF
					eHByZXNzaW9uo1EzNNQPVFVWV00nWFpOU01v
					ZGlmaWVyV05TRmxhZ3NeTlNPcGVyYXRvclR5
					cGWAEhBj0i8wWltfEBVOU0luUHJlZGljYXRl
					T3BlcmF0b3KjWlw0XxATTlNQcmVkaWNhdGVP
					cGVyYXRvctIvMF5fXxAVTlNDb21wYXJpc29u
					UHJlZGljYXRlo15gNFtOU1ByZWRpY2F0ZdIv
					MEViokU00i8wZGVfEBNOU0NvbXBvdW5kUHJl
					ZGljYXRlo2RgNAAIABEAGgAkACkAMgA3AEkA
					TABRAFMAbAByAHkAkwClAKwArgCwALIAtwDC
					AMQAxgDIANEA5QD4AQ4BEAESARQBFgEhASsB
					OgFNAVkBWwFdAV8BYQFjAXABdQF3AXkBfgGJ
					AZIBpQGpAbYBvwHEAcYByAHKAdEB2wHdAd8B
					4QHsAfECEAIUAhkCKAIsAjQCOQJPAlQCawJy
					AoQChgKIAooCiwKQAqwCsAK5AsQCzALbAt0C
					3wLkAvwDAAMWAxsDMwM3A0MDSANLA1ADZgAA
					AAAAAAIBAAAAAAAAAGYAAAAAAAAAAAAAAAAA
					AANq
					</data>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.FilterFinderItems2</string>
				<key>CFBundleVersion</key>
				<string>2.1.1</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryFilesAndFolders</string>
				</array>
				<key>Class Name</key>
				<string>Filter_Finder_Items_2</string>
				<key>InputUUID</key>
				<string>EC0630DE-55F1-4948-91FF-51E823120D20</string>
				<key>Keywords</key>
				<array/>
				<key>OutputUUID</key>
				<string>32598AE7-E051-4623-A76E-3FE0E14933A1</string>
				<key>UUID</key>
				<string>3188ABF2-C932-48A0-95FA-9C66CADCB39A</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Finder</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>com.apple.cocoa.path</string>
						<key>name</key>
						<string>itemType</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<data>
						</data>
						<key>name</key>
						<string>predicate</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>769.000000:243.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Filter Finder Items 2.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>import sys
import re
import os
import shutil
import logging
import requests
from sys import stdout
from pathlib import Path


# Create and configure logger
handlers = [
    logging.FileHandler(os.path.expanduser('~/.script.log')),
    logging.StreamHandler(stdout),
    ]
logging.basicConfig(level=logging.DEBUG,handlers=handlers, format="%(asctime)s;%(levelname)s;%(message)s")

ONE_DRIVE = '/Users/mittalmak/Library/CloudStorage/OneDrive-Personal'
VIDEO_DRIVE = '/Volumes/SSD1/Videos/'
IMG_EXT = ['.jpg', '.png', '.jpeg']
VIDEO_EXT = ['.mp4', '.mkv']

API_KEY = '428798c163a4628d3ce00c9964f304fc'
VIDEO_DRIVE = '/Volumes/SSD1/Videos/'
TV_SHOW_FOLDER = "/Volumes/SSD1/Videos/TV_Shows/"
MOVIES_FOLDER = "/Volumes/SSD1/Videos/Movies/"

def sanitize_filename(filename):
    """Saniatize file name used mostly for serching in the api"""
    filename = filename.replace("_", " ")
    filename = filename.replace(".", " ")
    filename = re.sub(r"(\(.*\))", "", filename)
    filename = re.sub(r"S\d\d(E\d\d)?", "", filename)
    return filename

def subfolder_tv(metadata):
    """For TV show create a new Dir if the tv show dir is not present"""
    year = metadata['first_air_date'].split("-")[0]
    name = re.sub(r"[:\\]", "", metadata['name'])
    DIR_PATH = f"{TV_SHOW_FOLDER}{name}({year})"
    if not os.path.isdir(DIR_PATH):
        os.makedirs(DIR_PATH)
        logging.info(f"Createing a dir at {DIR_PATH}")
    return DIR_PATH

def rchop(s, suffix='\n'):
    if suffix and s.endswith(suffix):
        return s[:-len(suffix)]
    return s

def get_media_metadata(search):
    """Search the and only get the first result"""
    url = f"https://api.themoviedb.org/3/search/multi?query={sanitize_filename(search)}&amp;api_key={API_KEY}"
    response = requests.request("GET", url)
    if response.ok:
        return response.json()['results'][0]
    logging.debug(f"No metadata found for {sanitize_filename(search)}")

def new_filename(name):
    import re
    regex_dict ={
        'movie_9x':{
            'regex': re.compile(r"((?P&lt;name&gt;.*?)\s+)((?P&lt;dt&gt;\((?:(?P&lt;day&gt;\d+)\s(?P&lt;month&gt;.+)\s)?(?P&lt;yr&gt;\d\d\d\d)\))\s+)((?P&lt;web&gt;(?P&lt;host&gt;(?:[A-Za-z0-9](?:[A-Za-z0-9-]{0,61})?)(\.))+(?P&lt;tld&gt;[a-z0-9][a-z0-9-]{0,61}[a-z0-9]))\s+)((?P&lt;eposide&gt;(?:S\d\d(E\d\d)?)?)\s)?(.*)(\[(?P&lt;file_size&gt;.*)\])$"),
            'replace': f"\g&lt;name&gt; \g&lt;eposide&gt;\g&lt;dt&gt;"
        },
    } 
    
    for source, pattern in regex_dict.items():
        if re.match(pattern['regex'], name):
            return re.sub(pattern['regex'], pattern['replace'], name)
    return name

for file in sys.stdin:
    file = Path(rchop(file))
    dir, file_name, extension = file.parent, file.stem, file.suffix
    if extension.lower() in IMG_EXT:
        if 'Screenshot' in file_name:
            dst = f'{ONE_DRIVE}/Documents/Pictures/ScreenShots'
        elif 'WhatsApp' in file_name:
            dst = f'{ONE_DRIVE}/Documents/Pictures/WhatsApp'
        else:
            dst = f'{ONE_DRIVE}/Documents/Pictures'
        logging.info(f'mv: {file} --&gt; {dst}')
        shutil.move(file, dst)
    elif extension.lower() in VIDEO_EXT:
        newname = new_filename(file_name)
        if newname == file_name:
            # the new_filename will return the original name if there is not regex match so just move the file to Temp dir
            dst = f'{VIDEO_DRIVE}/temp/'
        else:
            metadata = get_media_metadata(newname)
            if metadata:
                if metadata['media_type'] == 'tv':
                    dst = subfolder_tv(metadata) + "/" + newname + extension
                elif metadata['media_type'] == 'movie':
                    # todo movie sort
                    dst = MOVIES_FOLDER + "/" + newname + extension
            else:
                logging.info(f'No Metadata found for {file_name}')
        logging.info(f'mv: {file} --&gt; {dst}')
        shutil.move(file, dst)</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>0</integer>
					<key>shell</key>
					<string>/usr/local/bin/python3</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>5C5EAB4C-A2ED-4C3E-900B-4C8DA3B4D94C</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>E5B9C2B8-28B6-4146-A9A1-0BC10EADBD99</string>
				<key>UUID</key>
				<string>C065718B-FFB2-4E79-B718-B9DF80F95479</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>769.000000:982.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict>
		<key>F212F9BA-A41E-4F61-B627-95935E3BFB27</key>
		<dict>
			<key>from</key>
			<string>3188ABF2-C932-48A0-95FA-9C66CADCB39A - 3188ABF2-C932-48A0-95FA-9C66CADCB39A</string>
			<key>to</key>
			<string>C065718B-FFB2-4E79-B718-B9DF80F95479 - C065718B-FFB2-4E79-B718-B9DF80F95479</string>
		</dict>
	</dict>
	<key>workflowMetaData</key>
	<dict>
		<key>folderActionFolderPath</key>
		<string>~/Downloads</string>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.folderAction</string>
	</dict>
</dict>
</plist>
